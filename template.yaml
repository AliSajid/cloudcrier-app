AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  cloudcrier-app

  An application to periodically access the weather APIs and get the prediction and
  current weather data.
Resources:
  CloudCrierStateMachine:
    Type: AWS::Serverless::StateMachine # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
    Properties:
      DefinitionUri: statemachine/cloudcrier.asl.json
      DefinitionSubstitutions:
        QueingFunction: !GetAtt QueingFunction.Arn
        NWSApiFunction: !GetAtt NWSApiFunction.Arn
        OpenWeatherApiFunction: !GetAtt OpenWeatherApiFunction.Arn
        DDBPutItem: !Sub arn:${AWS::Partition}:states:::dynamodb:putItem
        DDBTable: !Ref WeatherDataTable
      Events:
        HourlyWeatherCheckSchedule:
          Type: Schedule # More info about Schedule Event Source: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-statemachine-schedule.html
          Properties:
            Description: Schedule to run the weather check every hour
            Enabled: false # This schedule is disabled by default to avoid incurring charges.
            Schedule: rate(1 hour)
      Tags: {"Name": "CloudCrierStateMachine", "Environment": "Production", "Application": "CloudCrier", "Management": "AWS SAM", "Managed": "true"}
      Policies: # Find out more about SAM policy templates: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
      - LambdaInvokePolicy:
          FunctionName: !Ref QueingFunction
      - LambdaInvokePolicy:
          FunctionName: !Ref NWSApiFunction
      - LambdaInvokePolicy:
          FunctionName: !Ref OpenWeatherApiFunction
      - DynamoDBWritePolicy:
          TableName: !Ref WeatherDataTable
      - SQSSendMessagePolicy:
          queueName: !Ref WeatherQueue
      - SQSPollerPolicy:
          queueName: !Ref WeatherQueue

  WeatherQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: weather-queue
      FifoQueue: true
      Tags:
        - Key: Name
          Value: WeatherQueue
        - Key: Environment
          Value: Production
        - Key: Application
          Value: CloudCrier
        - Key: Management
          Value: AWS SAM
        - Key: Managed
          Value: true

  QueingFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/queue_actions/
      Handler: app.lambda_handler
      Runtime: python3.12
      Architectures:
      - arm64

  NWSApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/check_nws_api/
      Handler: app.lambda_handler
      Runtime: python3.12
      Architectures:
      - arm64

  OpenWeatherApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/check_openweather_api/
      Handler: app.lambda_handler
      Runtime: python3.12
      Architectures:
      - arm64

  TransactionTable:
    Type: AWS::Serverless::SimpleTable # More info about SimpleTable Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-simpletable.html
    Properties:
      PrimaryKey:
        Name: Id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0

  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'

Outputs:
  # CloudCrierStateMachineHourlyTradingSchedule is an implicit Schedule event rule created out of Events key under Serverless::StateMachine
  # Find out more about other implicit resources you can reference within SAM
  # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-generated-resources.html
  CloudCrierStateMachineArn:
    Description: Stock Trading State machine ARN
    Value: !Ref CloudCrierStateMachine
  CloudCrierStateMachineRoleArn:
    Description: IAM Role created for Stock Trading State machine based on the specified
      SAM Policy Templates
    Value: !GetAtt CloudCrierStateMachineRole.Arn
# # More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Tracing: Active
    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON
      LogGroup: /aws/applications/cloudcrier_app
  Api:
    TracingEnabled: true
